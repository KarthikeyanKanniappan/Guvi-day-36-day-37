1.To create Database
use Zen

2.To create and insert data for user
db.user.insertMany([
    {
        userid: 1,
        name: "karthi",
        email: "kar@gmail.com", 
    },
     {
        userid: 2,
        name: "Vikki",
        email: "Vig@gmail.com",
    },
     {
        userid: 3,
        name: "vijay",
        email: "Vij@gmail.com",
    },
]);

2.To create and insert data for codekata

 db.codekata.insertMany([
    {
        userid: 1,
        codekata_title:"Array",
        codekata_problems: 5,
    },
     {
        userid: 2,
        codekata_title:"Strings",
        codekata_problems: 10,
    },
     {
        userid: 3,
        codekata_title:"Maths",
        codekata_problems: 15,
    },
])

3.To create and insert data for attendance

db.attendance.insertMany([
    {
        userid: 1,
        topicid: 1,
        Is_attended: true,
    },
  
   {
        userid: 2,
        topicid: 1,
        Is_attended: true,
    },
     {
        userid: 3,
        topicid: 5,
        Is_attended: false,
    },
])

4.To create and insert data for topics

db.topics.insertMany([
    {   
        topicid: 1,
        topic: "React",
        topic_created: new Date("18-oct-2020"),
    },
     {
        topicid: 2,
        topic: "Mongo",
        topic_created: new Date("28-oct-2020"),
    },
     {
        topicid: 3,
        topic: "Nodejs",
        topic_created: new Date("05-nov-2020"),
    },
])

5.To create and insert data for task
db.tasks.insertMany([
    {
        taskid: 1,
        topicid: 1,
        userid: 1,
        task: "HTML Task",
        due_date: new Date("18-oct-2020"),
        submitted: true,
    },
    {
        taskid: 2,
        topicid: 2,
        userid: 2,
        task: "CSS Task",
        due_date: new Date("28-oct-2020"),
        submitted: true,
    },
     {
        taskid: 3,
        topicid: 3,
        userid: 3,
        task: "Javascript Task",
        due_date: new Date("05-oct-2020"),
        submitted: false,
    },
])

6.To create and insert data for mentor
db.mentors.insertMany([
    {
        mentorid: 1,
        mentorname: "mentor1",
        mentor_email:"mentor1@gmail.com",
        class_count: 40,
    },
      {
        mentorid: 2,
        mentorname: "mentor2",
        mentor_email: "mentor2@gmail.com",
        class_count: 30,
    },
      {
        mentorid: 3,
        mentorname: "mentor3",
        mentor_email: "mentor3@gmail.com",
        class_count: 50,
    },
])

7.To create and insert data for companydrive
  db.comapanydrives.insertMany([
    {
        userid: 1,
        drive_date: new Date("20-oct-2020"),
        company: "Meta",
    },
   
  {
        userid: 1,
        drive_date: new Date("22-oct-2020"),
        company: "Amazon",
    },
     {
        userid: 2,
        drive_date: new Date("25-oct-2020"),
        company: "Netflix",
    },
     {
        userid: 3,
        drive_date: new Date("30-oct-2020"),
        company: "Google",
    },
])


1.Find all the topics and tasks which are thought in the month of October


2.Find all the company drives which appeared between 15 oct-2020 and 31-oct-2020
 db.comapanydrives.find({$and:[{drive_date:{$gte:new Date("15-oct-2020")}},{drive_date:{$lte:new Date("31-oct-2020")}}]})

3.Find all the company drives and students who are appeared for the placement.
db.comapanydrives.aggregate({$lookup:{from:"user",localField:"userid",foreignField:"userid",as:"outputinfo",pipeline:[{$project:{name:1}}]}})

4.Find the number of problems solved by the user in codekata
db.user.aggregate({$lookup:{from:"codekata",localField:"userid",foreignField:"userid",as:"info",pipeline:[{$project:{codekata_problems:1}}]}})

5.Find all the mentors with who has the mentee's count more than 15
db.mentors.find({class_count:{$gt:15}})

6.Find the number of users who are absent and task is not submitted between 15 oct-2020 and 31-oct-2020
